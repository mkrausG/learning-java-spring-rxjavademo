#Basically, URL's can contain the host part ("authority") (r2dbc:h2:tcp://remote-host/database) or they can be built without (r2dbc:h2:file:///absolute/file/path) depending on what you're trying to express. Getting feedback on the documentation and the idea how you approach configuration helps us to learn which aspects we can improve.
#file:in H2 is also optional and assumed by default, jdbc:h2:/path/to/database is a perfectly valid JDBC URL. It actually means the I/O method; there are others, such as async: and nioMapped:.
# jdbc:h2:c:/Projekte/Learning/Spring/r2dbc/db/Customer.db;MV_STORE=false
#spring.datasource.url=jdbc:h2:file:/data/demo
#r2dbc:h2:file://././build/h2db/db/dbname;DB_CLOSE_DELAY=-1;USER=username
#spring.r2dbc.url=r2dbc:h2:mem:///~/db/testdb
#spring.r2dbc.url=r2dbc:h2:file:c:/Projekte/Learning/Spring/r2dbc/db/Customer.db;MV_STORE=false
spring.r2dbc.url=r2dbc:h2:file:///c:/Projekte/Learning/Spring/xjava/db/Customer.db;MV_STORE=false
#spring.r2dbc.username=
#spring.r2dbc.password=